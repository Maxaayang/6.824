make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Thu Jul 21 08:49:31 2022

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# default
.SHELLFLAGS := -c
# environment
XDG_SESSION_CLASS = user
# environment
VSCODE_AGENT_FOLDER = /root/.vscode-server
# environment
XDG_SESSION_TYPE = tty
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# default
MAKE_VERSION := 4.2.1
# makefile
CURDIR := /home/addr/project/6.824
# makefile
SHELL = /bin/sh
# environment
VSCODE_NLS_CONFIG = {"locale":"zh-cn","availableLanguages":{"*":"zh-cn"},"_languagePackId":"1d735750dbb1b9066c7513078396ba0f.zh-cn","_translationsConfigFile":"/root/.vscode-server/data/clp/1d735750dbb1b9066c7513078396ba0f.zh-cn/tcf.json","_cacheRoot":"/root/.vscode-server/data/clp/1d735750dbb1b9066c7513078396ba0f.zh-cn","_resolvedLanguagePackCoreLocation":"/root/.vscode-server/data/clp/1d735750dbb1b9066c7513078396ba0f.zh-cn/ee8c7def80afc00dd6e593ef12f37756d8f504ea","_corruptedFile":"/root/.vscode-server/data/clp/1d735750dbb1b9066c7513078396ba0f.zh-cn/corrupted.info","_languagePackSupport":true}
# environment
_ = /root/.vscode-server/bin/ee8c7def80afc00dd6e593ef12f37756d8f504ea/node
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# 'override' directive
GNUMAKEFLAGS := 
# environment
MAKELEVEL := 0
# environment
VSCODE_AMD_ENTRYPOINT = vs/server/remoteExtensionHostProcess
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/0/bus
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
LC_NAME = zh_CN.UTF-8
# environment
VSCODE_CWD = /root
# environment
GOPROXY = https://goproxy.cn
# environment
SSH_CONNECTION = 10.250.249.107 49337 10.249.47.15 22
# environment
PATH = /root/.vscode-server/bin/ee8c7def80afc00dd6e593ef12f37756d8f504ea/bin:/root/.vscode-server/bin/ee8c7def80afc00dd6e593ef12f37756d8f504ea/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
# environment
XDG_RUNTIME_DIR = /run/user/0
# environment
GOPATH = /root/go
# environment
VSCODE_LOG_STACK = false
# environment
LC_NUMERIC = zh_CN.UTF-8
# environment
VSCODE_IPC_HOOK_CLI = /run/user/0/vscode-ipc-5769e949-44ee-4f3f-8f65-c94b945c0697.sock
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# automatic
%F = $(notdir $%)
# environment
VSCODE_PIPE_LOGGING = true
# environment
PWD = /home/addr/project/6.824
# default
.LOADED := 
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
GOMODCACHE = /root/go/pkg/mod
# environment
HOME = /root
# environment
LOGNAME = root
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# automatic
+F = $(notdir $+)
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
LC_TIME = zh_CN.UTF-8
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
SHLVL = 1
# environment
XDG_SESSION_ID = 609
# environment
USER = root
# environment
LC_MONETARY = zh_CN.UTF-8
# makefile
.DEFAULT_GOAL := 
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
LC_TELEPHONE = zh_CN.UTF-8
# default
MAKE_COMMAND := make
# environment
OLDPWD = /root
# default
.VARIABLES := 
# automatic
*F = $(notdir $*)
# environment
LANGUAGE = zh_CN:en
# makefile
MAKEFLAGS = pqrR
# environment
MFLAGS = -pqrR
# environment
SSH_CLIENT = 10.250.249.107 49337 22
# automatic
+D = $(patsubst %/,%,$(dir $+))
# environment
BROWSER = /root/.vscode-server/bin/ee8c7def80afc00dd6e593ef12f37756d8f504ea/bin/helpers/browser.sh
# environment
LC_IDENTIFICATION = zh_CN.UTF-8
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# automatic
^F = $(notdir $^)
# environment
LC_MEASUREMENT = zh_CN.UTF-8
# environment
LC_ALL = C
# environment
LC_PAPER = zh_CN.UTF-8
# default
SUFFIXES := 
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# environment
VSCODE_INJECT_NODE_MODULE_LOOKUP_PATH = /root/.vscode-server/bin/ee8c7def80afc00dd6e593ef12f37756d8f504ea/remote/node_modules
# default
.RECIPEPREFIX := 
# environment
LC_ADDRESS = zh_CN.UTF-8
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
LANG = C
# environment
VSCODE_EXTHOST_WILL_SEND_SOCKET = true
# environment
MOTD_SHOWN = pam
# makefile (from 'Makefile', line 6)
LABS = " lab1 lab2a lab2b lab2c lab2d lab3a lab3b lab4a lab4b "
# variable set hash-table stats:
# Load=81/1024=8%, Rehash=0, Collisions=15/108=14%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2050, inode 40114061): 6 files, no impossibilities.

# 6 files, no impossibilities in 1 directories.

# Implicit Rules

%: check-%
#  recipe to execute (from 'Makefile', line 9):
	@echo "Preparing $@-handin.tar.gz"
	@if echo $(LABS) | grep -q " $@ " ; then \
		echo "Tarring up your submission..." ; \
		COPYFILE_DISABLE=1 tar cvzf $@-handin.tar.gz \
			"--exclude=src/main/pg-*.txt" \
			"--exclude=src/main/diskvd" \
			"--exclude=src/mapreduce/824-mrinput-*.txt" \
			"--exclude=src/main/mr-*" \
			"--exclude=mrtmp.*" \
			"--exclude=src/main/diff.out" \
			"--exclude=src/main/mrcoordinator" \
			"--exclude=src/main/mrsequential" \
			"--exclude=src/main/mrworker" \
			"--exclude=*.so" \
			Makefile src; \
		if ! test -e api.key ; then \
			echo "Missing $(PWD)/api.key. Please create the file with your key in it or submit the $@-handin.tar.gz via the web interface."; \
		else \
			echo "Are you sure you want to submit $@? Enter 'yes' to continue:"; \
			read line; \
			if test "$$line" != "yes" ; then echo "Giving up submission"; exit; fi; \
			if test `stat -c "%s" "$@-handin.tar.gz" 2>/dev/null || stat -f "%z" "$@-handin.tar.gz"` -ge 20971520 ; then echo "File exceeds 20MB."; exit; fi; \
			cat api.key | tr -d '\n' > .api.key.trimmed ; \
			curl --silent --fail --show-error -F file=@$@-handin.tar.gz -F "key=<.api.key.trimmed" \
			https://6824.scripts.mit.edu/2022/handin.py/upload > /dev/null || { \
				echo ; \
				echo "Submit seems to have failed."; \
				echo "Please upload the tarball manually on the submission website."; } \
		fi; \
	else \
		echo "Bad target $@. Usage: make [$(LABS)]"; \
	fi

check-%:
#  recipe to execute (from 'Makefile', line 44):
	@echo "Checking that your submission builds correctly..."
	@./.check-build git://g.csail.mit.edu/6.824-golabs-2022 $(patsubst check-%,%,$@)

# 2 implicit rules, 0 (0.0%) terminal.

# Files

check-Makefile:
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'Makefile'
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 44):
	@echo "Checking that your submission builds correctly..."
	@./.check-build git://g.csail.mit.edu/6.824-golabs-2022 $(patsubst check-%,%,$@)

all: check-all
#  Command line target.
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'all'
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/3=0%
#  recipe to execute (from 'Makefile', line 9):
	@echo "Preparing $@-handin.tar.gz"
	@if echo $(LABS) | grep -q " $@ " ; then \
		echo "Tarring up your submission..." ; \
		COPYFILE_DISABLE=1 tar cvzf $@-handin.tar.gz \
			"--exclude=src/main/pg-*.txt" \
			"--exclude=src/main/diskvd" \
			"--exclude=src/mapreduce/824-mrinput-*.txt" \
			"--exclude=src/main/mr-*" \
			"--exclude=mrtmp.*" \
			"--exclude=src/main/diff.out" \
			"--exclude=src/main/mrcoordinator" \
			"--exclude=src/main/mrsequential" \
			"--exclude=src/main/mrworker" \
			"--exclude=*.so" \
			Makefile src; \
		if ! test -e api.key ; then \
			echo "Missing $(PWD)/api.key. Please create the file with your key in it or submit the $@-handin.tar.gz via the web interface."; \
		else \
			echo "Are you sure you want to submit $@? Enter 'yes' to continue:"; \
			read line; \
			if test "$$line" != "yes" ; then echo "Giving up submission"; exit; fi; \
			if test `stat -c "%s" "$@-handin.tar.gz" 2>/dev/null || stat -f "%z" "$@-handin.tar.gz"` -ge 20971520 ; then echo "File exceeds 20MB."; exit; fi; \
			cat api.key | tr -d '\n' > .api.key.trimmed ; \
			curl --silent --fail --show-error -F file=@$@-handin.tar.gz -F "key=<.api.key.trimmed" \
			https://6824.scripts.mit.edu/2022/handin.py/upload > /dev/null || { \
				echo ; \
				echo "Submit seems to have failed."; \
				echo "Please upload the tarball manually on the submission website."; } \
		fi; \
	else \
		echo "Bad target $@. Usage: make [$(LABS)]"; \
	fi

.PHONY: check-%
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

check-%:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

Makefile: check-Makefile
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'Makefile'
#  Last modified 2022-07-17 17:15:57.205320996
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 9):
	@echo "Preparing $@-handin.tar.gz"
	@if echo $(LABS) | grep -q " $@ " ; then \
		echo "Tarring up your submission..." ; \
		COPYFILE_DISABLE=1 tar cvzf $@-handin.tar.gz \
			"--exclude=src/main/pg-*.txt" \
			"--exclude=src/main/diskvd" \
			"--exclude=src/mapreduce/824-mrinput-*.txt" \
			"--exclude=src/main/mr-*" \
			"--exclude=mrtmp.*" \
			"--exclude=src/main/diff.out" \
			"--exclude=src/main/mrcoordinator" \
			"--exclude=src/main/mrsequential" \
			"--exclude=src/main/mrworker" \
			"--exclude=*.so" \
			Makefile src; \
		if ! test -e api.key ; then \
			echo "Missing $(PWD)/api.key. Please create the file with your key in it or submit the $@-handin.tar.gz via the web interface."; \
		else \
			echo "Are you sure you want to submit $@? Enter 'yes' to continue:"; \
			read line; \
			if test "$$line" != "yes" ; then echo "Giving up submission"; exit; fi; \
			if test `stat -c "%s" "$@-handin.tar.gz" 2>/dev/null || stat -f "%z" "$@-handin.tar.gz"` -ge 20971520 ; then echo "File exceeds 20MB."; exit; fi; \
			cat api.key | tr -d '\n' > .api.key.trimmed ; \
			curl --silent --fail --show-error -F file=@$@-handin.tar.gz -F "key=<.api.key.trimmed" \
			https://6824.scripts.mit.edu/2022/handin.py/upload > /dev/null || { \
				echo ; \
				echo "Submit seems to have failed."; \
				echo "Please upload the tarball manually on the submission website."; } \
		fi; \
	else \
		echo "Bad target $@. Usage: make [$(LABS)]"; \
	fi

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

check-all:
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'all'
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := check-all
# automatic
# % := 
# automatic
# * := all
# automatic
# + := 
# automatic
# | := 
 
# automatic
# < := 
# automatic
# ^ := 
# automatic
# ? := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/12=8%
#  recipe to execute (from 'Makefile', line 44):
	@echo "Checking that your submission builds correctly..."
	@./.check-build git://g.csail.mit.edu/6.824-golabs-2022 $(patsubst check-%,%,$@)

# files hash-table stats:
# Load=8/1024=1%, Rehash=0, Collisions=0/33=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 16 / storage = 128 B / avg = 8 B
# current buf: size = 8162 B / used = 128 B / count = 16 / avg = 8 B

# strcache performance: lookups = 31 / hit rate = 48%
# hash-table stats:
# Load=16/8192=0%, Rehash=0, Collisions=1/31=3%
# Finished Make data base on Thu Jul 21 08:49:31 2022

 
